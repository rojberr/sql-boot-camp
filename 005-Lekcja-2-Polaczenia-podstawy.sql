-- Jezyk SQL. Rozdzial 5a.
--Polaczenia – podstawy – zadania

-- Exercise 1
SELECT
    NAZWISKO,
    ETAT,
    ID_ZESP,
    NAZWA
FROM PRACOWNICY NATURAL JOIN ZESPOLY
ORDER BY NAZWISKO;

/*
NAZWISKO ETAT ID_ZESP NAZWA
--------------- ---------- ---------- --------------------
BIALY STAZYSTA 30 SYSTEMY EKSPERCKIE
BLAZEWICZ PROFESOR 40 ALGORYTMY
BRZEZINSKI PROFESOR 20 SYSTEMY ROZPROSZONE
HAPKE ASYSTENT 30 SYSTEMY EKSPERCKIE
JEZIERSKI ASYSTENT 20 SYSTEMY ROZPROSZONE
KONOPKA ASYSTENT 20 SYSTEMY ROZPROSZONE
KOSZLAJDA ADIUNKT 20 SYSTEMY ROZPROSZONE
KROLIKOWSKI ADIUNKT 20 SYSTEMY ROZPROSZONE
MAREK SEKRETARKA 10 ADMINISTRACJA
MATYSIAK ASYSTENT 20 SYSTEMY ROZPROSZONE
MORZY PROFESOR 20 SYSTEMY ROZPROSZONE
SLOWINSKI PROFESOR 30 SYSTEMY EKSPERCKIE
WEGLARZ DYREKTOR 10 ADMINISTRACJA
ZAKRZEWICZ STAZYSTA 30 SYSTEMY EKSPERCKIE
*/

-- Exercise 2
SELECT
    P.NAZWISKO,
    P.ETAT,
    P.ID_ZESP,
    Z.NAZWA
FROM PRACOWNICY P INNER JOIN ZESPOLY Z
                             ON P.ID_ZESP = Z.ID_ZESP
WHERE Z.ADRES = 'PIOTROWO 3A'
ORDER BY NAZWISKO;

/*
NAZWISKO ETAT ID_ZESP NAZWA
--------------- ---------- ---------- --------------------
BRZEZINSKI PROFESOR 20 SYSTEMY ROZPROSZONE
JEZIERSKI ASYSTENT 20 SYSTEMY ROZPROSZONE
KONOPKA ASYSTENT 20 SYSTEMY ROZPROSZONE
KOSZLAJDA ADIUNKT 20 SYSTEMY ROZPROSZONE
KROLIKOWSKI ADIUNKT 20 SYSTEMY ROZPROSZONE
MAREK SEKRETARKA 10 ADMINISTRACJA
MATYSIAK ASYSTENT 20 SYSTEMY ROZPROSZONE
MORZY PROFESOR 20 SYSTEMY ROZPROSZONE
WEGLARZ DYREKTOR 10 ADMINISTRACJA
*/

-- Exercise 3
SELECT
    P.NAZWISKO,
    P.ETAT,
    P.PLACA_POD,
    E.PLACA_MIN,
    E.PLACA_MAX
FROM PRACOWNICY P INNER JOIN ETATY E
                             ON P.ETAT = E.NAZWA
ORDER BY P.ETAT, P.NAZWISKO;

/*
NAZWISKO ETAT PLACA_POD PLACA_MIN PLACA_MAX
------------- -------------- --------- ----------- -----------
KOSZLAJDA ADIUNKT 590 510 750
KROLIKOWSKI ADIUNKT 645,5 510 750
HAPKE ASYSTENT 480 300 500
JEZIERSKI ASYSTENT 439,7 300 500
KONOPKA ASYSTENT 480 300 500
MATYSIAK ASYSTENT 371 300 500
WEGLARZ DYREKTOR 1730 1280 2100
BLAZEWICZ PROFESOR 1350 800 1500
BRZEZINSKI PROFESOR 960 800 1500
MORZY PROFESOR 830 800 1500
SLOWINSKI PROFESOR 1070 800 1500
MAREK SEKRETARKA 410,2 270 450
BIALY STAZYSTA 250 150 250
ZAKRZEWICZ STAZYSTA 208 150 250
*/

-- Exercise 4
SELECT
    P.NAZWISKO,
    P.ETAT,
    P.PLACA_POD,
    E.PLACA_MIN,
    E.PLACA_MAX,
    CASE WHEN P.PLACA_POD > E.PLACA_MIN THEN 'OK' ELSE 'NOT OK' END AS CZY_PENSJA_OK
FROM PRACOWNICY P INNER JOIN ETATY E
                             ON P.ETAT = E.NAZWA
ORDER BY P.ETAT, P.NAZWISKO;

/*
NAZWISKO ETAT PLACA_POD PLACA_MIN PLACA_MAX CZY_PENSJA_OK
------------- -------------- --------- ----------- ----------- -------------
KOSZLAJDA ADIUNKT 590 510 750 OK
KROLIKOWSKI ADIUNKT 645,5 510 750 OK
HAPKE ASYSTENT 480 300 500 OK
JEZIERSKI ASYSTENT 439,7 300 500 OK
KONOPKA ASYSTENT 480 300 500 OK
MATYSIAK ASYSTENT 371 300 500 OK
WEGLARZ DYREKTOR 1730 1280 2100 OK
BLAZEWICZ PROFESOR 1350 800 1500 OK
BRZEZINSKI PROFESOR 960 800 1500 OK
MORZY PROFESOR 830 800 1500 OK
SLOWINSKI PROFESOR 1070 800 1500 OK
MAREK SEKRETARKA 410,2 270 450 OK
BIALY STAZYSTA 250 150 250 OK
ZAKRZEWICZ STAZYSTA 208 150 250 OK
*/

-- Exercise 5
SELECT
    P.NAZWISKO,
    P.ETAT,
    P.PLACA_POD,
    E.PLACA_MIN,
    E.PLACA_MAX,
    CASE WHEN P.PLACA_POD > E.PLACA_MIN THEN 'OK' ELSE 'NOT OK' END AS CZY_PENSJA_OK
FROM PRACOWNICY P INNER JOIN ETATY E
                             ON P.ETAT = E.NAZWA
WHERE CASE WHEN P.PLACA_POD > E.PLACA_MIN THEN 'OK' ELSE 'NOT OK' END = 'NOT OK'
ORDER BY P.ETAT, P.NAZWISKO;

/*
No items to display.
*/

-- Exercise 6
SELECT
    P.NAZWISKO,
    P.PLACA_POD,
    P.ETAT,
    E.NAZWA AS KAT_PLAC,
    E.PLACA_MIN,
    E.PLACA_MAX
FROM PRACOWNICY P RIGHT OUTER JOIN ETATY E
                                   ON P.PLACA_POD BETWEEN E.PLACA_MIN AND E.PLACA_MAX
ORDER BY P.NAZWISKO, KAT_PLAC;

/*
NAZWISKO PLACA_POD ETAT KAT_PLAC PLACA_MIN PLACA_MAX
--------------- ---------- ---------- ---------- ---------- ----------
BIALY 250 STAZYSTA STAZYSTA 150 250
BLAZEWICZ 1350 PROFESOR DYREKTOR 1280 2100
BLAZEWICZ 1350 PROFESOR PROFESOR 800 1500
BRZEZINSKI 960 PROFESOR PROFESOR 800 1500
HAPKE 480 ASYSTENT ASYSTENT 300 500
JEZIERSKI 439,7 ASYSTENT ASYSTENT 300 500
JEZIERSKI 439,7 ASYSTENT SEKRETARKA 270 450
KONOPKA 480 ASYSTENT ASYSTENT 300 500
KOSZLAJDA 590 ADIUNKT ADIUNKT 510 750
KROLIKOWSKI 645,5 ADIUNKT ADIUNKT 510 750
MAREK 410,2 SEKRETARKA ASYSTENT 300 500
MAREK 410,2 SEKRETARKA SEKRETARKA 270 450
MATYSIAK 371 ASYSTENT ASYSTENT 300 500
MATYSIAK 371 ASYSTENT SEKRETARKA 270 450
MORZY 830 PROFESOR PROFESOR 800 1500
SLOWINSKI 1070 PROFESOR PROFESOR 800 1500
WEGLARZ 1730 DYREKTOR DYREKTOR 1280 2100
ZAKRZEWICZ 208 STAZYSTA STAZYSTA 150 250
*/

-- Exercise 7
SELECT
    P.NAZWISKO,
    P.PLACA_POD,
    P.ETAT,
    E.NAZWA AS KAT_PLAC,
    E.PLACA_MIN,
    E.PLACA_MAX
FROM PRACOWNICY P RIGHT OUTER JOIN ETATY E
                                   ON P.PLACA_POD BETWEEN E.PLACA_MIN AND E.PLACA_MAX
WHERE E.NAZWA = 'SEKRETARKA'
ORDER BY P.NAZWISKO;

/*
NAZWISKO PLACA_POD ETAT KAT_PLAC PLACA_MIN PLACA_MAX
--------------- ---------- ---------- ---------- ---------- ----------
JEZIERSKI 439,7 ASYSTENT SEKRETARKA 270 450
MAREK 410,2 SEKRETARKA SEKRETARKA 270 450
MATYSIAK 371 ASYSTENT SEKRETARKA 270 450
*/

-- Exercise 8
SELECT
    P.NAZWISKO,
    P.ID_PRAC,
    S.NAZWISKO AS SZEF,
    P.ID_SZEFA
FROM PRACOWNICY P INNER JOIN PRACOWNICY S
                             ON P.ID_SZEFA = S.ID_PRAC
WHERE P.ID_SZEFA IS NOT NULL
ORDER BY NAZWISKO;

/*
PRACOWNIK ID_PRAC SZEF ID_SZEFA
--------------- ---------- --------------- ----------
BIALY 210 BRZEZINSKI 130
BLAZEWICZ 110 WEGLARZ 100
BRZEZINSKI 130 WEGLARZ 100
HAPKE 230 SLOWINSKI 120
JEZIERSKI 170 BRZEZINSKI 130
KONOPKA 220 BLAZEWICZ 110
KOSZLAJDA 160 BRZEZINSKI 130
KROLIKOWSKI 150 BRZEZINSKI 130
MAREK 180 WEGLARZ 100
MATYSIAK 190 MORZY 140
MORZY 140 BRZEZINSKI 130
SLOWINSKI 120 WEGLARZ 100
ZAKRZEWICZ 200 MORZY 140
*/

-- Exercise 9
SELECT
    P.NAZWISKO,
    P.ZATRUDNIONY AS PRAC_ZATRUDNIONY,
    S.NAZWISKO AS SZEF,
    P.ZATRUDNIONY,
    (EXTRACT(YEAR FROM P.ZATRUDNIONY) - EXTRACT(YEAR FROM S.ZATRUDNIONY)) AS LATA
FROM PRACOWNICY P INNER JOIN PRACOWNICY S
                             ON P.ID_SZEFA = S.ID_PRAC
WHERE (EXTRACT(YEAR FROM P.ZATRUDNIONY) - EXTRACT(YEAR FROM S.ZATRUDNIONY)) <= 10
ORDER BY P.ZATRUDNIONY, P.NAZWISKO;

/*
PRACOWNIK PRAC_ZATRUDNIONY SZEF SZEF_ZATRUDNIONY LATA
----------- ---------------- ---------- ---------------- ----
BRZEZINSKI 1968.07.01 WEGLARZ 1968.01.01 0
BLAZEWICZ 1973.05.01 WEGLARZ 1968.01.01 5
MORZY 1975.09.15 BRZEZINSKI 1968.07.01 7
KROLIKOWSKI 1977.09.01 BRZEZINSKI 1968.07.01 9
SLOWINSKI 1977.09.01 WEGLARZ 1968.01.01 9
*/

-- Exercise 10
SELECT
    Z.NAZWA,
    COUNT(P.ID_ZESP) AS LICZBA,
    AVG(P.PLACA_POD) AS SREDNIA_PLACA
FROM ZESPOLY Z INNER JOIN PRACOWNICY P
                          ON Z.ID_ZESP = P.ID_ZESP
GROUP BY Z.NAZWA
ORDER BY Z.NAZWA;

/*
NAZWA LICZBA SREDNIA_PLACA
-------------------- --------- -------------
ADMINISTRACJA 2 1070,1
ALGORYTMY 1 1350
SYSTEMY EKSPERCKIE 4 502
SYSTEMY ROZPROSZONE 7 616,6
*/

-- Exercise 11
SELECT
    Z.NAZWA,
    CASE
        WHEN (COUNT(P.ID_ZESP) <= 2) THEN 'maly'
        WHEN (COUNT(P.ID_ZESP) BETWEEN 3 AND 6) THEN 'sredni'
        WHEN (COUNT(P.ID_ZESP) >= 7) THEN 'duzy'
        END AS ETYKIETA
FROM ZESPOLY Z INNER JOIN PRACOWNICY P
                          ON Z.ID_ZESP = P.ID_ZESP
GROUP BY Z.NAZWA
HAVING COUNT(P.ID_ZESP) > 0
ORDER BY Z.NAZWA;

/*
NAZWA ETYKIETA
--------------------- --------
ADMINISTRACJA maly
ALGORYTMY maly
SYSTEMY EKSPERCKIE sredni
SYSTEMY ROZPROSZONE duzy
*/
